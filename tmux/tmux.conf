# Setting the prefix from `C-b` to `C-t`.
# By remapping the `CapsLock` key to `Ctrl`,
# you can make triggering commands more comfortable!
set-option -g prefix C-t

# Free the original `Ctrl-b` prefix keybinding.
# This allows us to use C-b to shift back one char
unbind C-b

# If we type C-t t, send C-t (character transpose in most shells)
# Commented out since we use C-t t to set pane title (see below)
# bind-key t send-key C-t

# Reload the file with Prefix r.
bind r source-file ~/.tmux.conf \; display "tmux.conf reloaded!"

# List paste buffers
bind b list-buffers

# Splitting panes.
bind | split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'

# Create new windows with the current path
bind c new-window -c '#{pane_current_path}'

# Create new windows with path used as tmux session start
bind C new-window 

# Moving between panes.
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R


# For keybindings that support repeating, set the timeout to 2 seconds
set -g repeat-time 2000


# Jump between current and last window
# Hold Control and press tl: C-t C-l -> C-tl
bind -r C-l 'last-window'

# Moving between windows.
# Provided you've mapped your `CAPS LOCK` key to the `CTRL` key,
# you can now move between panes without moving your hands off the home row.

# Press C-t C-n for next window. Becuase it's a repeat binding you have
# up until `repeat-time` ms to press C-n again to move again before you
# need to press the full C-t C-n combo again.
bind -r C-p select-window -t :-
bind -r C-n select-window -t :+

# Pane resizing.
# e.g. C-t J for first move, then just J for subsequent, until `repeat-time` ms timeout.
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Maximize and restore a pane.
unbind Up
bind Up new-window -d -n tmp \; swap-pane -s tmp.1 \; select-window -t tmp
unbind Down
bind Down last-window \; swap-pane -s tmp.1 \; kill-window -t tmp

# move the window left or right in the index, e.g. move window 1 to window 0
bind-key -n C-Left swap-window -t -1
bind-key -n C-Right swap-window -t +1


# Don't let various shells etc set the window name - allow us to specify
# the name manually and have it remain
set -g allow-rename off

# Setting the delay between prefix and command.
set -sg escape-time 1

# Set the base index for windows to 1 instead of 0.
set -g base-index 1

# Set the base index for panes to 1 instead of 0.
setw -g pane-base-index 1

# Mouse support - set to on if you want to use the mouse.
# Disable the mouse, since mouse select doesn't copy to system clipboard any more :'(
set -g mouse off

# Set the default terminal mode to 256color mode.
# This should be 'screen' related, not 'xterm' related.
# Screen is for inside tmux, xterm is for outside.
set -g default-terminal "screen-256color"

# Enable activity alerts.
setw -g monitor-activity on
set -g visual-activity on

# Pane colors.
#set -g pane-border-fg green
#set -g pane-border-bg black
#set -g pane-active-border-fg white
#set -g pane-active-border-bg yellow

# Command / message line.
#set -g message-fg white
#set -g message-bg black
#set -g message-attr bright

# Enable vi keys.
# `man tmux` and then search for `mode-keys`
# There is a great table of commands for vi and emacs there.
setw -g mode-keys vi


setw -g window-status-format " #F#I:#W#F "
setw -g window-status-current-format " #F#I:#W#F "


# Log output to a text file on demand.
bind-key P command-prompt -p 'save pane buffer history to filename:' -I '~/tmux.history' 'capture-pane -S -32768 ; save-buffer %1 ; delete-buffer'


# List of plugins via Tmux plugin manager
#set -g @plugin 'tmux-plugins/tpm'
#set -g @plugin 'tmux-plugins/tmux-resurrect'
#set -g @plugin 'tmux-plugins/tmux-yank'

# Initialize the plugin manager
#run ~/dev/unix-configs/tmux/plugins/tpm/tpm


# Pane borders & status
set -g pane-border-format "#{pane_index} #{pane_title}"
set -g pane-border-status bottom



# Set prefix+t to set title of current pane..
bind-key t command-prompt "select-pane -T '%%'"


# Synchronize panes on/off
bind S setw synchronize-panes


# Prefix prefix-q to show a list of pane numbers
# then enter one of those numbers to jump to that pane.

# Show pane numbers for 5 seconds 
set -g display-panes-time 5000


# prefix-; to jump between previous pane





###########################
# Colors
###########################


 # color status bar
set -g status-bg black
set -g status-fg cyan



# Define my custom menu bar

# No gap between status bars (window 1, window 2,...)
set -g window-status-separator ''

# status bar colors
set -g status-bg black
set -g status-fg white

# alignment settings
set-option -g status-justify left

# status left options - this is the section on the left of the screen
set-option -g status-left '#[fg=colour202][#[bg=black,fg=colour202]#S#[fg=colour202]] '
set-option -g status-left-length 20

# window list options
set-window-option -g window-status-format '#[fg=colour245,bold] #I: #W | '
set-window-option -g window-status-current-format '#[bg=colour184,fg=colour244,bold]#I: #[bg=colour184,fg=black]#W#[fg=dim]#F#[bg=default,fg=colour245,bold] |'

# status right options
# this is the date & time area to the bottom right
set -g status-right '#[fg=green]| #[fg=blue]%Y-%m-%d #[fg=white]%H:%M#[default] |'

# set shell
set -g default-shell /bin/zsh

set-option -wg automatic-rename off

# Run the same command in every pane in the current window
bind E command-prompt -p "Command:" \
         "run \"tmux list-panes -F '##{session_name}:##{window_index}.##{pane_index}' \
         | xargs -I PANE tmux send-keys -t PANE '%1' Enter\""


# Nested session support with F12
# Press F12 to toggle tmux key capture on the outer (parent) session.
bind -T root F12  \
  set prefix None \;\
  set key-table off \;\
  set window-status-current-format "#[fg=$color_window_off_status_bg,bg=$color_window_off_status_current_bg]$separator_powerline_right#[default] #I:#W# #[fg=$color_window_off_status_current_bg,bg=$color_window_off_status_bg]$separator_powerline_right#[default]" \;\
  set window-status-current-style "fg=$color_dark,bold,bg=$color_window_off_status_current_bg" \;\
  if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
  refresh-client -S \;\

bind -T off F12 \
  set -u prefix \;\
  set -u key-table \;\
  set -u status-style \;\
  set -u window-status-current-style \;\
  set -u window-status-current-format \;\
  refresh-client -S
  
wg_is_keys_off="#[fg=$color_light,bg=$color_window_off_indicator]#([ $(tmux show-option -qv key-table) = 'off' ] && echo 'OFF')#[default]"

set -g status-right "$wg_is_keys_off #[fg=green]| #[fg=blue]%Y-%m-%d #[fg=white]%H:%M#[default] |"
